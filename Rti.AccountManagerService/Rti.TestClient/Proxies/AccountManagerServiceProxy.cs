//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName = "IAccountManagerService")]
public interface IAccountManagerService
{

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAccountManagerService/IsAlive", ReplyAction = "http://tempuri.org/IAccountManagerService/IsAliveResponse")]
    bool IsAlive();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IAccountManagerServiceChannel : IAccountManagerService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class AccountManagerServiceClient : System.ServiceModel.ClientBase<IAccountManagerService>, IAccountManagerService
{

    public AccountManagerServiceClient()
    {
    }

    public AccountManagerServiceClient(string endpointConfigurationName) :
        base(endpointConfigurationName)
    {
    }

    public AccountManagerServiceClient(string endpointConfigurationName, string remoteAddress) :
        base(endpointConfigurationName, remoteAddress)
    {
    }

    public AccountManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
        base(endpointConfigurationName, remoteAddress)
    {
    }

    public AccountManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
        base(binding, remoteAddress)
    {
    }

    public bool IsAlive()
    {
        return base.Channel.IsAlive();
    }
}
